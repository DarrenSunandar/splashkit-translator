<%#
    Redeclare every function pointer typealias. There are issues with converting
    function pointer types (return type and parameter types) so we do not
    explicitly convert them using `lib_type_for`. See da03064.
%>
<%
  @function_pointers.each do |fp|
%>
<%
    fp_param_decl = fp[:parameters].map do |param_name, param_data|
      "#{param_data[:type]} #{param_name}"
    end.join(', ')
%>
typedef <%= fp[:return][:type] %> (__sklib_<%= fp[:name] %>)(<%= fp_param_decl %>);
<%= fp[:return][:type] %> (*__skadapter__to_<%= fp[:name] %>(__sklib_<%= fp[:name] %> *v))(<%= fp_param_decl %>) { return v; }
<%= lib_type_for fp[:return] %> (*__skadapter__to_sklib_<%= fp[:name] %>(<%= fp[:name] %> *v))(<%= fp_param_decl %>) { return v; }
<%
  end # end function_pointers.each
%>
