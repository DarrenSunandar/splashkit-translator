<%#
    `__sklib_ptr' is a wrapper for typealiases to pointer types using static
    casts. Use the `__skadapter__make_typealias_adapter' macro to make adapter
    functions to and from the SK and Lib pointer typealiases.
 %>
#define __sklib_ptr void *
#define __skadapter__make_typealias_adapter(type)\
typedef __sklib_ptr __sklib_##type;\
__sklib_ptr __skadapter__to_sklib_ptr(type v) { return static_cast<__sklib_ptr>(v); }\
type __skadapter__to_##type(__sklib_ptr v) { return static_cast<type>(v); }
<% @typealiases.each do |typealias| %>
__skadapter__make_typealias_adapter(<%= typealias[:name] %>)
<% end %>
